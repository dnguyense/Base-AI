{
  "projectName": "T√™n d·ª± √°n",
  "projectType": "android|ios|flutter|react-native|web",
  "mainLanguages": [
    "c√°c ng√¥n ng·ªØ ch√≠nh"
  ],
  "mainFrameworks": [
    "c√°c framework ch√≠nh"
  ],
  "keyTechnologies": [
    "c√°c c√¥ng ngh·ªá ch√≠nh"
  ],
  "keyFeatures": [
    "c√°c t√≠nh nƒÉng ch√≠nh"
  ],
  "setupInstructions": {
    "path": "instructions/setup/project-setup.md",
    "workflow": [
      "MANDATORY: Brainstorm Workflow (3-Phase Process)",
      "C·∫•u H√¨nh Project Identity",
      "Auto-Setup Project Detection",
      "T·∫°o Project Structure",
      "Platform-Specific Setup",
      "Development Workflow Setup",
      "Testing v√† Validation",
      "Documentation v√† Finalization"
    ],
    "mandatoryBrainstormWorkflow": {
      "description": "B·∫ÆT BU·ªòC th·ª±c hi·ªán brainstorm workflow tr∆∞·ªõc khi kh·ªüi t·∫°o b·∫•t k·ª≥ d·ª± √°n m·ªõi n√†o",
      "workflowFile": ".cursor/rules/brainstorm-workflow.mdc",
      "detailedWorkflowFile": ".cursor/rules/brainstorm-detailed-workflow.mdc",
      "enforcementRules": [
        "NGHI√äM C·∫§M b·∫Øt ƒë·∫ßu planning khi ch∆∞a ho√†n th√†nh brainstorm",
        "B·∫ÆT BU·ªòC t·∫°o file Brainstorm_[TenDuAn].md tr∆∞·ªõc khi ti·∫øp t·ª•c",
        "B·∫ÆT BU·ªòC ho√†n th√†nh t·∫•t c·∫£ 3 phases: Foundation ‚Üí Structure ‚Üí Advanced",
        "B·∫ÆT BU·ªòC x√°c nh·∫≠n v·ªõi ng∆∞·ªùi d√πng tr∆∞·ªõc khi chuy·ªÉn sang planning"
      ],
      "triggerConditions": [
        "Ng∆∞·ªùi d√πng c√≥ √Ω t∆∞·ªüng m·ªõi",
        "Kh·ªüi ƒë·ªông d·ª± √°n tr·ªëng",
        "Kh√¥ng t·ªìn t·∫°i file Brainstorm_[TenDuAn].md",
        "Y√™u c·∫ßu t·∫°o d·ª± √°n m·ªõi t·ª´ ƒë·∫ßu"
      ]
    },
    "supportedPlatforms": [
      "Android (Java/Kotlin)",
      "iOS (Swift/Objective-C)",
      "Flutter (Dart)",
      "React Native (JavaScript/TypeScript)",
      "Web (JavaScript/TypeScript)"
    ],
    "requiredTools": [
      "Python >= 3.9 (cho MCP server)",
      "Cursor IDE v·ªõi MCP support",
      "Git",
      "Platform-specific SDK"
    ],
    "mcpServerPort": 3001
  },
  "workflows": {
    "base": {
      "description": "Base workflow cho t·∫•t c·∫£ d·ª± √°n m·ªõi - B·∫ÆT BU·ªòC b·∫Øt ƒë·∫ßu v·ªõi Brainstorm Workflow",
      "workflow": [
        "PHASE 1: MANDATORY Brainstorm Workflow (3-Phase Process)",
        "PHASE 2: C·∫•u H√¨nh Project Identity",
        "PHASE 3: Auto-Setup Project Detection",
        "PHASE 4: T·∫°o Project Structure",
        "PHASE 5: Platform-Specific Setup",
        "PHASE 6: Development Workflow Setup",
        "PHASE 7: Testing v√† Validation",
        "PHASE 8: Documentation v√† Finalization"
      ],
      "mandatoryFirstStep": {
        "name": "Brainstorm Workflow",
        "description": "B·∫ÆT BU·ªòC th·ª±c hi·ªán tr∆∞·ªõc khi ti·∫øp t·ª•c b·∫•t k·ª≥ b∆∞·ªõc n√†o kh√°c",
        "workflowFiles": [
          ".cursor/rules/brainstorm-workflow.mdc",
          ".cursor/rules/brainstorm-detailed-workflow.mdc"
        ],
        "completionCriteria": [
          "File Brainstorm_[TenDuAn].md ƒë∆∞·ª£c t·∫°o",
          "Ho√†n th√†nh 3 phases: Foundation ‚Üí Structure ‚Üí Advanced",
          "Ng∆∞·ªùi d√πng x√°c nh·∫≠n th√¥ng tin brainstorm",
          "Risk assessment ƒë∆∞·ª£c th·ª±c hi·ªán"
        ],
        "blockingRules": [
          "Kh√¥ng ƒë∆∞·ª£c chuy·ªÉn sang PHASE 2 khi ch∆∞a ho√†n th√†nh brainstorm",
          "Kh√¥ng ƒë∆∞·ª£c t·∫°o planning khi ch∆∞a c√≥ file Brainstorm_[TenDuAn].md",
          "Kh√¥ng ƒë∆∞·ª£c b·∫Øt ƒë·∫ßu development khi brainstorm ch∆∞a ƒë∆∞·ª£c x√°c nh·∫≠n"
        ]
      }
    },
    "android": {
      "relatedWorkflows": [
        ".cursor/rules/android-workflow.mdc",
        ".cursor/rules/tdd-mobile-workflow.mdc",
        ".cursor/rules/android-aso-package-workflow.mdc"
      ],
      "requiredOutputs": [
        "Project structure created",
        "Technical stack selected",
        "Development environment ready"
      ],
      "nextStage": "stage3_development"
    },
    "stage3_development": {
      "description": "Giai ƒëo·∫°n ph√°t tri·ªÉn ch√≠nh",
      "workflowRules": "Based on projectType",
      "platformSpecificRules": {
        "android": [
          ".cursor/rules/android-workflow.mdc",
          ".cursor/rules/android-code-deduplication.mdc",
          ".cursor/rules/tdd-mobile-workflow.mdc"
        ],
        "ios": [
          ".cursor/rules/ios-workflow.mdc",
          ".cursor/rules/tdd-mobile-workflow.mdc"
        ],
        "flutter": [
          ".cursor/rules/mobile-utility-workflow.mdc",
          ".cursor/rules/tdd-mobile-workflow.mdc"
        ],
        "web": [
          ".cursor/rules/frontend-rules.mdc",
          ".cursor/rules/backend-rules-optimized.mdc"
        ]
      }
    }
  },
  "coreRules": {
    "always_applied": [
      ".cursor/rules/base-rules.mdc",
      ".cursor/rules/development-rules.mdc",
      ".cursor/rules/markdown-unified-rules.mdc",
      ".cursor/rules/cursor-optimization-rules.mdc"
    ],
    "project_management": [
      ".cursor/rules/planning-workflow.mdc",
      ".cursor/rules/project-personality-generator.mdc",
      ".cursor/rules/resource-management.mdc"
    ],
    "quality_assurance": [
      ".cursor/rules/tdd-guidelines.mdc",
      ".cursor/rules/review-gate-v2-setup.mdc"
    ]
  },
  "integrations": {
    "telegram_notifications": {
      "description": "G·ª≠i th√¥ng b√°o ƒë·∫øn Telegram khi ho√†n th√†nh c√¥ng vi·ªác",
      "rule": ".cursor/rules/telegram-notification-workflow.mdc",
      "scripts": [
        "./scripts/notify.sh",
        "./scripts/telegram_notifier.py"
      ]
    },
    "ai_apis": {
      "rule": ".cursor/rules/api-integration-rules.mdc"
    },
    "mcp_tools": {
      "review_gate": true,
      "browser_debug": true
    }
  },
  "projectStructure": {
    "instructions/": "Project documentation v√† workflows",
    "scripts/": "Automation scripts",
    "assets/": "Static resources",
    "design/": "Design files for analysis",
    ".cursor/rules/": "Development rules v√† workflows",
    "_backups/": "File backups (git-ignored)"
  },
  "projectIdentifiers": [
    ".project-identity",
    ".project-personality",
    "Instruction.md",
    "Brainstorm_*.md"
  ],
  "workflowEnforcement": {
    "newProjectDetection": {
      "triggers": [
        "Empty project folder",
        "No Brainstorm_*.md files exist",
        "User mentions '√Ω t∆∞·ªüng m·ªõi' or 'd·ª± √°n m·ªõi'"
      ],
      "mandatoryFirstStep": "stage1_brainstorm",
      "blockingMessage": "üö´ D·ª∞ √ÅN M·ªöI PH√ÅT HI·ªÜN - B·∫ÆT BU·ªòC BRAINSTORM TR∆Ø·ªöC\n‚úÖ H√£y b·∫Øt ƒë·∫ßu: 'T√¥i mu·ªën brainstorm √Ω t∆∞·ªüng...'"
    },
    "stageProgression": {
      "cannot_skip_stages": true,
      "require_completion_confirmation": true,
      "auto_update_project_stage": true
    }
  },
  "features": {
    "ai_context_analysis": true,
    "voice_commands": true,
    "resource_management": true,
    "design_analysis": true,
    "auto_project_detection": true,
    "mcp_integration": true,
    "telegram_notifications": true
  }
}
