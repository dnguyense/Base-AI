name: kotlin-coroutines-best-practices.mdc
description: Best practices for asynchronous programming and state management with Kotlin Coroutines
globs: **/*.kt

- Use Kotlin Coroutines for async operations
- Use Flow and StateFlow for reactive programming
- Avoid callback hell, use suspend functions
- Handle lifecycle-aware coroutines with viewModelScope/lifecycleScope
- Implement proper error handling for coroutines
- Use Flow operators correctly
- Avoid blocking the main thread
- Implement proper loading states
- Handle edge cases in state machines
- Use sealed classes for modeling UI states 