---
description: 
globs: 
alwaysApply: false
---
name: tailwindcss-best-practices
description: Best practices for using Tailwind CSS in Next.js applications
globs: "**/*.{ts,tsx,jsx,js,css}"

- Follow mobile-first approach for responsive design
- Use Tailwind's utility-first approach to create consistent UI components
- Implement responsive patterns with proper breakpoints (sm, md, lg, xl)
- Extend theme in tailwind.config.js for custom colors, spacing, and fonts
- Use @apply directive only for frequently reused class combinations
- Create component-level abstractions instead of utility class duplication
- Maintain consistent naming conventions for custom utility classes
- Apply appropriate Tailwind variants (hover:, focus:, dark:) for interactive elements
- Use Tailwind's built-in functions for dynamic styles (e.g., className={`${isActive ? "bg-blue-500" : "bg-gray-200"}`})
- Implement proper dark mode support with dark: variant
- Combine with UI component libraries like Shadcn UI or Radix UI for complex components
- Prioritize accessibility with appropriate ARIA attributes and semantic HTML
- Optimize bundle size by purging unused styles in production
- Use Tailwind's plugins ecosystem to extend functionality when needed
- Apply consistent spacing and sizing scales throughout the application