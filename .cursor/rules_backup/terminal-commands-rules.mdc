---
description: 
globs: 
alwaysApply: false
---
# Terminal Commands Rules
description: Quy tắc khi thực hiện các lệnh terminal trong dự án
globs: ["*.*"]

## Quy tắc sử dụng SSH
- LUÔN sử dụng sshpass cho các lệnh SSH trong terminal
- KHÔNG đề xuất lệnh SSH mà thiếu sshpass
- Sử dụng cú pháp: `sshpass -p "password" ssh user@host`
- Thêm flag `-o StrictHostKeyChecking=no` để tránh prompt xác nhận host

## Quy tắc chung cho lệnh terminal
- Tránh sử dụng lệnh có thể treo terminal do chờ input
- Thêm timeout hoặc giới hạn thời gian cho các lệnh có thể kéo dài
- Ưu tiên sử dụng các lệnh không tương tác (non-interactive)
- Hạn chế đề xuất lệnh xóa file/thư mục mà không có xác nhận

## Xử lý mật khẩu và thông tin nhạy cảm
- Không hiển thị mật khẩu trực tiếp trong lệnh terminal
- Đề xuất sử dụng biến môi trường: `export SSHPASS="password" && sshpass -e ssh user@host`
- Ưu tiên file chứa mật khẩu với quyền truy cập hạn chế: `sshpass -f passfile ssh user@host`

## Truyền file qua SSH
- Sử dụng sshpass với scp: `sshpass -p "password" scp file.txt user@host:/path/`
- Với rsync: `sshpass -p "password" rsync -avz -e ssh source/ user@host:/destination/`

## Các tùy chọn bảo mật cho SSH
- Thêm `-o ConnectTimeout=XX` để tránh kết nối bị treo
- Sử dụng `-q` (quiet mode) để giảm output không cần thiết
- Cân nhắc thêm `-T` để tắt pseudo-terminal nếu không cần thiết

## Ví dụ lệnh SSH chuẩn
```bash
# Kết nối SSH cơ bản
sshpass -p "your_password" ssh -o StrictHostKeyChecking=no user@hostname

# Thực thi lệnh từ xa
sshpass -p "your_password" ssh -o StrictHostKeyChecking=no user@hostname "ls -la"

# Truyền file an toàn
sshpass -p "your_password" scp -o StrictHostKeyChecking=no file.txt user@hostname:/path/
```

## Xử lý lỗi kết nối SSH
- Kiểm tra mã lỗi sau mỗi lệnh: `echo $?`
- Thêm logic retry cho kết nối không ổn định
- Có phương án dự phòng khi kết nối SSH thất bại 