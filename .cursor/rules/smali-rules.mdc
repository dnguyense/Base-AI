---
description: 
globs: 
alwaysApply: false
---
# Smali Project Rules
description: Comprehensive rules for working with Smali code and APK decompilation projects
globs: "*.smali,*.apk,*.dex,*.xml,AndroidManifest.xml,*.yml,*.yaml,*.json"

## Smali Code Analysis
- Luôn phân tích cấu trúc APK trước khi bắt đầu chỉnh sửa
- Xác định rõ các thành phần chính: Activities, Services, Receivers, Providers
- Phân tích AndroidManifest.xml để hiểu cấu trúc ứng dụng
- Tìm hiểu luồng thực thi chính trước khi sửa đổi
- Xác định các điểm nhập (entry points) của ứng dụng
- Phân tích các thư viện bên thứ ba được sử dụng
- Tìm hiểu cơ chế bảo mật và mã hóa nếu có

## Decompilation Workflow
- Sử dụng công cụ phù hợp: apktool, jadx, dex2jar, jd-gui
- Lưu trữ APK gốc trước khi decompile
- Tạo bản sao dự phòng sau mỗi bước chỉnh sửa lớn
- Kiểm tra tính toàn vẹn của mã sau khi decompile
- Ghi chú rõ ràng về các thay đổi trong file Changes.md
- Kiểm tra sự khác biệt giữa các phiên bản APK
- Theo dõi các thay đổi trong AndroidManifest.xml

## Smali Syntax Guidelines
- Hiểu rõ cú pháp Dalvik bytecode và Smali
- Cẩn thận với các thanh ghi và kiểu dữ liệu
- Duy trì cấu trúc try-catch khi chỉnh sửa
- Cẩn thận với các jump instructions và labels
- Hiểu rõ cách thức hoạt động của invoke-* instructions
- Chú ý đến việc quản lý stack và registers
- Cẩn thận khi thay đổi các hằng số và tham số

## Smali Editing Best Practices
- Thêm comment chi tiết trước mỗi thay đổi
- Sử dụng format `.line X` để duy trì line numbers
- Cẩn thận khi thêm/xóa methods để tránh lỗi signature
- Duy trì cấu trúc .locals và .registers
- Kiểm tra tính nhất quán của các tham chiếu
- Cẩn thận với các tham chiếu đến resources
- Đảm bảo tính nhất quán của các access flags

## Resource Handling
- Phân tích cấu trúc thư mục res/
- Hiểu rõ cách tham chiếu đến resources trong smali
- Cẩn thận khi chỉnh sửa các file XML trong resources
- Duy trì tính nhất quán của resource IDs
- Kiểm tra sự phụ thuộc giữa các resources
- Cẩn thận với các drawable và layout resources
- Hiểu rõ cách thức hoạt động của resource qualifiers

## Security Considerations
- Xác định và ghi chú các cơ chế bảo mật
- Cẩn thận khi làm việc với mã liên quan đến mã hóa
- Không vô hiệu hóa các cơ chế bảo mật quan trọng
- Hiểu rõ các quyền trong AndroidManifest.xml
- Cẩn thận với các API calls liên quan đến bảo mật
- Ghi chú các thay đổi liên quan đến bảo mật
- Không thêm các lỗ hổng bảo mật mới

## Recompilation Process
- Kiểm tra tính hợp lệ của mã trước khi recompile
- Sử dụng apktool build với các tham số phù hợp
- Ký APK với keystore phù hợp sau khi build
- Kiểm tra APK sau khi recompile và ký
- Ghi chú các lỗi gặp phải trong quá trình recompile
- Kiểm tra zipalign và tối ưu hóa APK
- Kiểm tra tính tương thích với các phiên bản Android

## Debugging Techniques
- Sử dụng logcat để theo dõi hoạt động runtime
- Thêm các lệnh log.d/log.e tại các điểm quan trọng
- Sử dụng các công cụ như Frida hoặc Xposed để debug
- Theo dõi các exception và crash logs
- Kiểm tra các network calls và API requests
- Phân tích memory usage và performance
- Sử dụng các công cụ phân tích tĩnh khi cần thiết

## Optimization Guidelines
- Tối ưu hóa mã smali chỉ khi thực sự cần thiết
- Cẩn thận khi tối ưu hóa các vòng lặp
- Hiểu rõ tác động của việc inline methods
- Cẩn thận khi thay đổi cấu trúc dữ liệu
- Đo lường hiệu suất trước và sau khi tối ưu hóa
- Ghi chú các tối ưu hóa đã thực hiện
- Cân nhắc tác động đến kích thước APK

## Documentation Standards
- Ghi chú chi tiết về cấu trúc APK trong Structure.md
- Tạo sơ đồ luồng cho các chức năng chính
- Ghi chú các thay đổi trong Changes.md
- Tạo danh sách các classes và methods quan trọng
- Ghi chú các API endpoints và network calls
- Tạo tài liệu về cách sử dụng và build dự án
- Cập nhật tài liệu sau mỗi thay đổi lớn

## Reverse Engineering Ethics
- Tuân thủ các quy định pháp luật về reverse engineering
- Không reverse engineer các ứng dụng có bản quyền mà không có sự cho phép
- Chỉ sử dụng kỹ thuật reverse engineering cho mục đích học tập, nghiên cứu, hoặc bảo mật
- Không phát tán mã nguồn đã reverse engineer khi không được phép
- Tôn trọng quyền sở hữu trí tuệ của các nhà phát triển
- Báo cáo các lỗ hổng bảo mật cho nhà phát triển trước khi công bố
- Không sử dụng kỹ thuật reverse engineering để phá vỡ DRM hoặc các cơ chế bảo vệ bản quyền

## Specific Smali Patterns
- Nhận diện các mẫu code phổ biến trong smali
- Hiểu rõ cách implement các design patterns trong smali
- Nhận diện các mẫu mã hóa và giải mã
- Hiểu rõ cách implement các thuật toán phổ biến
- Nhận diện các mẫu network communication
- Hiểu rõ cách implement các cơ chế xác thực
- Nhận diện các mẫu obfuscation phổ biến

## Troubleshooting Common Issues
- Xử lý lỗi "Bad method handle type" khi recompile
- Xử lý lỗi "Duplicate definition" khi merge code
- Xử lý lỗi signature verification khi cài đặt APK
- Xử lý các vấn đề với resources khi recompile
- Xử lý các vấn đề với AndroidManifest.xml
- Xử lý các vấn đề với native libraries
- Xử lý các vấn đề với multidex 