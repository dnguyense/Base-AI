# Instruction-First Development Rules
description: Rules for instruction-first development workflow
globs: "*.*"

## Lưu Ý Quan Trọng
- ***BẮT BUỘC*** phân biệt giữa quy trình tạo dự án mới và quy trình nâng cấp dự án
- ***BẮT BUỘC*** sử dụng file quy trình phù hợp với nhiệm vụ đang thực hiện
- ***BẮT BUỘC*** xác nhận với người dùng về bước tiếp theo trước khi bắt đầu code
- ***BẮT BUỘC*** hoàn thành quá trình brainstorm trước khi thiết lập file tài liệu
- ***BẮT BUỘC*** hoàn thành đủ 6 tài liệu cơ bản trước khi bắt đầu code
- ***BẮT BUỘC*** lập kế hoạch triển khai rõ ràng có người dùng phê duyệt trước khi code

## Quy Trình Bắt Buộc
1. Bắt đầu bằng câu hỏi "Bạn muốn thực hiện brainstorm ý tưởng hay đã có yêu cầu cụ thể?"
2. Nếu chưa có yêu cầu cụ thể -> thực hiện brainstorm (ít nhất 3 vòng trao đổi)
3. Sau brainstorm -> tạo tài liệu "6 Docs" đầy đủ
4. Sau khi tài liệu hoàn thiện -> xác nhận kế hoạch triển khai
5. Chỉ khi người dùng xác nhận -> bắt đầu viết code

## Phân Biệt Hai Quy Trình
| Quy Trình Dự Án Mới | Quy Trình Nâng Cấp Dự Án |
|---|---|
| Brainstorming nhiều vòng với người dùng | Rà soát dự án hiện tại |
| Nghiên cứu đối thủ cạnh tranh | Phân tích tác động của thay đổi |
| Tạo instruction từ đầu | Tạo kế hoạch nâng cấp dựa trên dự án hiện có |
| Xây dựng từ zero | Thay đổi dựa trên code đã tồn tại |
| Tự do trong việc chọn cấu trúc và pattern | Tuân thủ cấu trúc và pattern hiện có |
| Focus vào việc xây dựng đúng đắn từ đầu | Focus vào việc giữ tính tương thích và ổn định |
| Cập nhật .code-workspace và tạo workspace mới | Sử dụng workspace hiện có |

## Quy Tắc Chung Cho Cả Hai Quy Trình
- ***BẮT BUỘC*** có file instruction/kế hoạch trước khi bắt đầu code
- ***BẮT BUỘC*** backup tất cả file liên quan trước khi tiến hành thay đổi lớn
- ***BẮT BUỘC*** kiểm thử kỹ lưỡng sau khi hoàn thành
- ***BẮT BUỘC*** cập nhật documentation sau khi hoàn thành

## Quy Trình Brainstorming Chi Tiết
1. **Hiểu nhu cầu cơ bản** - Hỏi người dùng về mục tiêu chính của dự án
2. **Phân tích đối tượng** - Xác định người dùng cuối và nhu cầu của họ
3. **Tìm hiểu tính năng** - Liệt kê các tính năng quan trọng và phân loại độ ưu tiên 
4. **Phân tích kỹ thuật** - Đề xuất các công nghệ phù hợp với yêu cầu
5. **Lập kế hoạch MVP** - Xác định phiên bản tối thiểu khả thi của sản phẩm
6. **Đề xuất timeline** - Dự kiến thời gian hoàn thành và các milestone

## Quy Tắc Tạo Tài Liệu "6 Docs"
1. **PRD (Project Requirements Document)** - Chi tiết tất cả các yêu cầu dự án
2. **AppFlow** - Luồng ứng dụng và UX, có mockup nếu cần
3. **TechStack** - Stack công nghệ chi tiết với lý do lựa chọn
4. **FrontendGuidelines** - Cấu trúc, coding style, và conventions cho frontend
5. **BackendStructure** - Thiết kế API, database schema, và xử lý dữ liệu
6. **ImplementationPlan** - Kế hoạch triển khai chi tiết, timeline, và testing strategy

## Tài Liệu Quy Trình Chi Tiết
- Tạo dự án mới: Xem file [project-creation-workflow.mdc](mdc:project-creation-workflow.mdc)
- Nâng cấp dự án: Xem file [project-upgrade-workflow.mdc](mdc:project-upgrade-workflow.mdc)

## Checklist Bắt Buộc Trước Khi Viết Code
- [ ] Đã hoàn thành brainstorming đầy đủ
- [ ] Đã tạo PRD được người dùng xác nhận
- [ ] Đã tạo đủ 6 tài liệu cơ bản
- [ ] Đã lập kế hoạch triển khai được phê duyệt
- [ ] Đã thiết lập môi trường dev và workflow
- [ ] Đã xác định rõ các milestone và acceptance criteria

@file ../project-creation-workflow.mdc
@file ../project-upgrade-workflow.mdc 